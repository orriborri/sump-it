/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Beans {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string | null;
  roster: string | null;
  rostery: string | null;
}

export interface BrewFeedback {
  brew_id: number;
  coffee_amount_ml: number | null;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  is_bitter: Generated<boolean>;
  is_sour: Generated<boolean>;
  overall_rating: number | null;
  too_strong: Generated<boolean>;
  too_weak: Generated<boolean>;
}

export interface Brews {
  bean_id: number | null;
  created_at: Generated<Timestamp>;
  dose: number | null;
  grind: number | null;
  grinder_id: number | null;
  id: Generated<number>;
  method_id: number | null;
  ratio: Numeric | null;
  water: number | null;
}

export interface Grinders {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  max_setting: Generated<number | null>;
  min_setting: Generated<number | null>;
  name: string | null;
  setting_type: Generated<string | null>;
  step_size: Generated<number | null>;
}

export interface Methods {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string;
}

export interface DB {
  beans: Beans;
  brew_feedback: BrewFeedback;
  brews: Brews;
  grinders: Grinders;
  methods: Methods;
}
