/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Beans {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string | null;
  roster: string | null;
  rostery: string | null;
}

export interface Brews {
  bean_id: number | null;
  id: Generated<number>;
  method_id: number | null;
}

export interface Grinders {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string | null;
}

export interface Methods {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  name: string;
}

export interface DB {
  beans: Beans;
  brews: Brews;
  grinders: Grinders;
  methods: Methods;
}
